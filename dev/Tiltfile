# docker_build("vfarcic/devops-toolkit", ".")

# custom_build(
#     "vfarcic/devops-toolkit",
#     "build-image.sh",
#     ["."],
#     skips_local_docker=True,
# )

# load('ext://nerdctl', 'nerdctl_build')

# nerdctl_build(
#     ref="vfarcic/devops-toolkit",
#     context=".",
# )

# k8s_yaml(kustomize("kustomize/overlays/dev"))

# k8s_resource("devops-toolkit", port_forwards="8080:80")

# local_resource(
#     "tests",
#     cmd="echo I was too lazy to write tests for this demo",
# )

# load('ext://namespace', 'namespace_create')

allow_k8s_contexts(k8s_context())

# local("vcluster --namespace vfarcic create vfarcic --expose --upgrade")
#Â local("vcluster --namespace vfarcic connect vfarcic")

# namespace_create('crossplane-system')

load('ext://helm_remote', 'helm_remote')
load('ext://secret', 'secret_create_generic')

helm_remote(
    "crossplane",
    repo_url="https://charts.crossplane.io/stable",
    namespace="crossplane-system",
    create_namespace="true",
)

secret_create_generic(
    "aws-creds",
    namespace="crossplane-system",
    from_file="aws-creds.conf",
    secret_type="generic",
)

k8s_yaml([
    "crossplane/config-sql.yaml",
    "crossplane/config-app.yaml",
    "crossplane/provider-sql.yaml",
    "crossplane/provider-kubernetes-incluster.yaml",
    "crossplane/provider-aws.yaml",
    "crossplane/provider-config-aws.yaml",
])

